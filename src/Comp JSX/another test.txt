const [showFinished, setShowFinished] = useState(false);

const HandleFinishedTasks = () => {
   setShowFinished(!showFinished)
{
}

//...

{showFinished
   ? Tasks.filter((item) => item.isCompleted).map((item) => {
         return (
            <div className="list" key={item.id}>{
               <div className="only-task">{
                  <input value={item.id} onChange={HandleCheckBox} type="checkbox" />
                  <p className={item.isCompleted ? "strike" : ""}>{item.ToDo}</p>
               </div>
               <div className="only-button">{
                  <button className='trash' onClick={(e) => { HandleDelete(e, item.id) }}><FaTrashAlt /></button>
                  <button className='edit' onClick={(e) => { HandleEdit(e, item.id) }}><MdModeEditOutline /></button>
               </div>
            </div>
         )]
      })
   : Tasks.map((item) =>{
         return (
            <div className="list" key={item.id}>));
            //... same content as before
         </div>(
      )}
   }